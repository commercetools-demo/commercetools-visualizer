import { ClientLogging } from '@commercetools-test-data/commons';
import {
  fake,
  Generator,
  oneOf,
  sequence,
} from '@commercetools-test-data/core';
import { createRelatedDates } from '@commercetools-test-data/utils';
import type { TSubscription } from './types';
import {
  ChangeSubscription,
  MessageSubscription,
} from '@commercetools/platform-sdk/dist/declarations/src/generated/models/subscription';

const [getOlderDate, getNewerDate] = createRelatedDates();
const generator = Generator<TSubscription>({
  fields: {
    id: fake((f) => f.string.uuid()),
    version: sequence(),
    key: fake((f) => f.lorem.slug()),
    createdAt: fake(getOlderDate),
    createdBy: fake(() => ClientLogging.random()),
    lastModifiedAt: fake(getNewerDate),
    lastModifiedBy: fake(() => ClientLogging.random()),
    changes: [
      oneOf<ChangeSubscription>(
        { resourceTypeId: 'approval-flow' },
        { resourceTypeId: 'approval-rule' },
        { resourceTypeId: 'associate-role' },
        { resourceTypeId: 'business-unit' },
        { resourceTypeId: 'cart' },
        { resourceTypeId: 'cart-discount' },
        { resourceTypeId: 'category' },
        { resourceTypeId: 'channel' },
        { resourceTypeId: 'customer' },
        { resourceTypeId: 'customer-email-token' },
        { resourceTypeId: 'customer-group' },
        { resourceTypeId: 'customer-password-token' },
        { resourceTypeId: 'discount-code' },
        { resourceTypeId: 'extension' },
        { resourceTypeId: 'inventory-entry' },
        { resourceTypeId: 'key-value-document' },
        { resourceTypeId: 'order' },
        { resourceTypeId: 'order-edit' },
        { resourceTypeId: 'payment' },
        { resourceTypeId: 'product' },
        { resourceTypeId: 'product-discount' },
        { resourceTypeId: 'product-price' },
        { resourceTypeId: 'product-selection' },
        { resourceTypeId: 'product-type' },
        { resourceTypeId: 'quote' },
        { resourceTypeId: 'quote-request' },
        { resourceTypeId: 'review' },
        { resourceTypeId: 'shipping-method' },
        { resourceTypeId: 'shopping-list' },
        { resourceTypeId: 'staged-quote' },
        { resourceTypeId: 'standalone-price' },
        { resourceTypeId: 'state' },
        { resourceTypeId: 'store' },
        { resourceTypeId: 'subscription' },
        { resourceTypeId: 'tax-category' },
        { resourceTypeId: 'type' },
        { resourceTypeId: 'zone' }
      ),
    ],
    messages: [
      oneOf<MessageSubscription>(
        {
          resourceTypeId: 'business-unit',
          types: [
            'BusinessUnitAddressAdded',
            'BusinessUnitAddressChanged',
            'BusinessUnitAddressRemoved',
            'BusinessUnitAssociateAdded',
            'BusinessUnitAssociateChanged',
            'BusinessUnitAssociateRemoved',
            'BusinessUnitAssociatesSet',
            'BusinessUnitBillingAddressAdded',
            'BusinessUnitBillingAddressRemoved',
            'BusinessUnitContactEmailSet',
            'BusinessUnitCreated',
            'BusinessUnitDefaultBillingAddressSet',
            'BusinessUnitDefaultShippingAddressSet',
            'BusinessUnitDeleted',
            'BusinessUnitNameChanged',
            'BusinessUnitShippingAddressAdded',
            'BusinessUnitShippingAddressRemoved',
            'BusinessUnitStatusChanged',
            'BusinessUnitStoreAdded',
            'BusinessUnitStoreModeChanged',
            'BusinessUnitStoreRemoved',
            'BusinessUnitStoresSet',
          ],
        },
        {
          resourceTypeId: 'category',
          types: ['CategoryCreated', 'CategorySlugChanged'],
        },
        {
          resourceTypeId: 'customer',
          types: [
            'CustomerAddressAdded',
            'CustomerAddressChanged',
            'CustomerAddressRemoved',
            'CustomerCompanyNameSet',
            'CustomerCreated',
            'CustomerDateOfBirthSet',
            'CustomerDeleted',
            'CustomerEmailChanged',
            'CustomerEmailVerified',
            'CustomerFirstNameSet',
            'CustomerGroupSet',
            'CustomerLastNameSet',
            'CustomerPasswordUpdated',
            'CustomerTitleSet',
          ],
        },
        {
          resourceTypeId: 'inventory-entry',
          types: [
            'InventoryEntryCreated',
            'InventoryEntryDeleted',
            'InventoryEntryQuantitySet',
          ],
        },
        {
          resourceTypeId: 'order',
          types: [
            'CustomLineItemStateTransition',
            'DeliveryAdded',
            'DeliveryAddressSet',
            'DeliveryItemsUpdated',
            'DeliveryRemoved',
            'LineItemStateTransition',
            'OrderBillingAddressSet',
            'OrderCreated',
            'OrderCustomLineItemAdded',
            'OrderCustomLineItemDiscountSet',
            'OrderCustomLineItemQuantityChanged',
            'OrderCustomLineItemRemoved',
            'OrderCustomerEmailSet',
            'OrderCustomerGroupSet',
            'OrderCustomerSet',
            'OrderDeleted',
            'OrderDiscountCodeAdded',
            'OrderDiscountCodeRemoved',
            'OrderDiscountCodeStateSet',
            'OrderEditApplied',
            'OrderImported',
            'OrderLineItemAdded',
            'OrderLineItemDiscountSet',
            'OrderLineItemDistributionChannelSet',
            'OrderLineItemRemoved',
            'OrderPaymentAdded',
            'OrderPaymentStateChanged',
            'OrderReturnShipmentStateChanged',
            'OrderShipmentStateChanged',
            'OrderShippingAddressSet',
            'OrderShippingInfoSet',
            'OrderShippingRateInputSet',
            'OrderStateChanged',
            'OrderStateTransition',
            'OrderStoreSet',
            'ParcelAddedToDelivery',
            'ParcelItemsUpdated',
            'ParcelMeasurementsUpdated',
            'ParcelRemovedFromDelivery',
            'ParcelTrackingDataUpdated',
            'ReturnInfoAdded',
            'ReturnInfoSet',
          ],
        },
        {
          resourceTypeId: 'payment',
          types: [
            'PaymentCreated',
            'PaymentInteractionAdded',
            'PaymentStatusInterfaceCodeSet',
            'PaymentStatusStateTransition',
            'PaymentTransactionAdded',
            'PaymentTransactionStateChanged',
          ],
        },
        {
          resourceTypeId: 'product',
          types: [
            'ProductAddedToCategory',
            'ProductCreated',
            'ProductDeleted',
            'ProductImageAdded',
            'ProductPriceDiscountsSet',
            'ProductPriceExternalDiscountSet',
            'ProductPublished',
            'ProductRemovedFromCategory',
            'ProductRevertedStagedChanges',
            'ProductSlugChanged',
            'ProductStateTransition',
            'ProductUnpublished',
            'ProductVariantAdded',
            'ProductVariantDeleted',
          ],
        },
        {
          resourceTypeId: 'product-selection',
          types: [
            'ProductSelectionCreated',
            'ProductSelectionDeleted',
            'ProductSelectionProductAdded',
            'ProductSelectionProductRemoved',
            'ProductSelectionVariantSelectionChanged',
          ],
        },
        {
          resourceTypeId: 'quote',
          types: [
            'QuoteCreated',
            'QuoteDeleted',
            'QuoteStateChanged',
            'QuoteStateTransition',
          ],
        },
        {
          resourceTypeId: 'quote-request',
          types: [
            'QuoteRequestCreated',
            'QuoteRequestDeleted',
            'QuoteRequestStateChanged',
            'QuoteRequestStateTransition',
          ],
        },
        {
          resourceTypeId: 'staged-quote',
          types: [
            'StagedQuoteCreated',
            'StagedQuoteDeleted',
            'StagedQuoteStateChanged',
            'StagedQuoteStateTransition',
          ],
        },
        {
          resourceTypeId: 'standalone-price',
          types: [
            'StandalonePriceActiveChanged',
            'StandalonePriceCreated',
            'StandalonePriceDeleted',
            'StandalonePriceDiscountSet',
            'StandalonePriceExternalDiscountSet',
            'StandalonePriceStagedChangesApplied',
            'StandalonePriceValueChanged',
          ],
        },
        {
          resourceTypeId: 'store',
          types: [
            'StoreCreated',
            'StoreDeleted',
            'StoreDistributionChannelsChanged',
            'StoreLanguagesChanged',
            'StoreNameSet',
            'StoreProductSelectionsChanged',
            'StoreSupplyChannelsChanged',
          ],
        }
      ),
    ],
    destination: {
      type: 'GoogleCloudPubSub',
      projectId: fake((f) => f.lorem.word()),
      topic: fake((f) => f.lorem.word()),
    },
    format: oneOf(
      {
        type: 'CloudEvents',
        cloudEventsVersion: fake((f) => f.lorem.word()),
      },
      { type: 'Platform' }
    ),
    status: oneOf(
      'ConfigurationError',
      'ConfigurationErrorDeliveryStopped',
      'Healthy',
      'TemporaryError'
    ),
  },
});
export default generator;
